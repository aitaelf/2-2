Ответ преподавателя:
Здравствуйте.

Задание выполнено в полной мере и хорошо.
Но есть пару замечаний и дополнений:
1. Простьба добавлять package.json в проект с необходимыми зависимостями.
2. Было бы плюсом, если бы логировались запросы ( что пришло на вход и что ушло в ответ)
3. функция, обрабатывающая rpc очень большая, ее лучше разбить на несколько (следуя принципу "разделяй и влавствую")
4. + за присутствие класса User, хорошо что присутствует частичное употребление ООП парадигм. Но в данном случае, класс User используется как паттер фабрика (<a href="https://ru.wikipedia.org/wiki/%D0%90%D0%B1%D1%81%D1%82%D1%80%D0%B0%D0%BA%D1%82%D0%BD%D0%B0%D1%8F_%D1%84%D0%B0%D0%B1%D1%80%D0%B8%D0%BA%D0%B0_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F))">https://ru.wikipedia.org/wiki/%D0%90%D0%B1%D1%81%D1%82%D1%80%D0%B0%D0%BA%D1%82%D0%BD%D0%B0%D1%8F_%D1%84%D0%B0%D0%B1%D1%80%D0%B8%D0%BA%D0%B0_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F))</a> т.е. он является и сущностью User и генератором новым User через метод createUser. Здесь достаточно было использовать только constructor и создавать новые сущности через него.


Если будут вопросы - пишите мне или в группу в facebook.